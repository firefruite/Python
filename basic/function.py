"""
1. def关键字定义函数
2. 函数第一行的字符串视为文档字符串
3. 函数在执行时使用函数局部变量符号表，所有函数变量赋值都存在局部符号表中；引用变量时，首先，在局部符号表里查找变量，
   然后，是外层函数局部符号表，再是全局符号表，最后是内置名称符号表。因此，尽管可以引用全局变量和外层函数的变量，但
   最好不要在函数内直接赋值（除非是 global 语句定义的全局变量，或 nonlocal 语句定义的外层函数变量）
4. 在调用函数时会将实际参数（实参）引入到被调用函数的局部符号表中；
   因此，实参是使用 按值调用 来传递的（其中的 值 始终是对象的 引用 而不是对象的值）。
5. 参数类型
    位置参数
    默认参数 -- 默认值只计算一次
        默认值是可变对象时(列表、字典或类实例)，会产生与该规则而不同的结果(*****)
        def f(a, L=[]):
        L.append(a)
        return L

        print(f(1))
        print(f(2))
        print(f(3))

        output:
        [1]
        [1, 2]
        [1, 2, 3]
    关键字参数
        def parrot(voltage, state='a stiff', action='voom', type='Norwegian Blue'):
            ...

        错误示例:
        parrot()                     # 缺失必需的参数
        parrot(voltage=5.0, 'dead')  # 关键字参数后存在非关键字参数
        parrot(110, voltage=220)     # 同一个参数重复的值(*****)
        parrot(actor='John Cleese')  # 未知的关键字参数

        关键字参数必须跟在位置参数之后
        关键字参数的顺序不重要

        ***** -- *****
        **name和*name
        **name 接受一个字典，该字典包含与函数中已定义形参对应之外的所有 关键字参数
        *name 接受一个元组，该元组包含形参列表之外的 位置参数
        *name必须放在**name前面
    特殊参数
        def f(pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2):
              -----------    ----------     ----------
                |             |                  |
                |        位置或关键字   |
                |                                - 仅限关键字
                 -- 仅限位置
    *args 形参后的任何形式参数只能是仅限关键字参数，即只能用作关键字参数，不能用作位置参数
6. 语法糖
    指那些更加易读、更易于编写的形式化语言结构
7. lambda表达式
    语法：lambda x: x+n

    def make_incrementor(n):
    return lambda x: x + n  # 返回一个匿名函数 x是形参

    f = make_incrementor(42)
    f(0)  # 42
    f(1)  # 43
8. 编码风格
    缩进，用4个空格，不要用制表符
    换行，一行不超过79个字符
    用空行分隔函数和类，及函数内较大的代码块
    最好把注释放在单独一行
    使用文档字符串
    运算符前后，逗号后要用空格，但不要直接在括号内使用：a = f(1, 2) + g(3, 4)，即紧靠着括号
    类和函数的命名要一致。类用UpperCamelCase，函数用lowercase_with_underscores


"""